apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "{{ .Chart.Name }}-{{ .Values.Name }}-deployment"
    # app: "{{ .Release.Name }}-{{ .Values.Name }}-deployment"
  name: "{{ .Chart.Name }}-{{ .Values.Name }}-deployment"
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}-{{ .Values.Name }}-pod"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}-{{ .Values.Name }}-pod"
      name: "{{ .Chart.Name }}-{{ .Values.Name }}-pod"
    spec:
      containers:
      - name: "{{ .Chart.Name }}-{{ .Values.Name }}-pod"
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        resources:
          requests:
            memory: 1Gi
            cpu: 500m
          limits:
            memory: 2Gi
            cpu: 1
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 5
